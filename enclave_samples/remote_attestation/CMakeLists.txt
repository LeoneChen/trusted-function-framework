find_package(Protobuf REQUIRED)
set(TEE_PROTO_FILES
    ${TEE_TOP_DIR}/proto/kubetee.proto
)
PROTOBUF_GENERATE_CPP(
    TEE_PROTO_SRCS
    TEE_PROTO_HDRS
    ${CMAKE_BINARY_DIR}/uproto
    ${TEE_PROTO_FILES}
)
PROTOBUF_GENERATE_CPP_ENCLAVE(
    TEE_PROTO_SRCS_T
    TEE_PROTO_HDRS_T
    ${CMAKE_BINARY_DIR}/tproto
    ${TEE_PROTO_FILES}
)

set(INC_EX ${TEE_TOP_DIR}/sdk/include)
set(SGXSSL_LIB ${SGX_SSL_DIR}/lib64)
set(SGXSSL_INC ${SGX_SSL_DIR}/include)
set(EX_EDL_SEARCH_PATHS
    ${CMAKE_CURRENT_SOURCE_DIR}/enclave
    ${TEE_TOP_DIR}/sdk/edl
    ${SGXSSL_INC}
    ${INC_EX}
)
set(E_SRCS
    ${TEE_PROTO_SRCS_T}
    ${CMAKE_CURRENT_SOURCE_DIR}/enclave/enclave.cpp
)
set(LDS ${CMAKE_CURRENT_SOURCE_DIR}/enclave/enclave.lds)
set(EDL ${CMAKE_CURRENT_SOURCE_DIR}/enclave/enclave.edl)
set(KEY ${CMAKE_CURRENT_SOURCE_DIR}/enclave/enclave_private.pem)
set(XML ${CMAKE_CURRENT_SOURCE_DIR}/enclave/enclave.config.xml)
set(TLIBS tkubetee tprotobuf)
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
    ${CMAKE_BINARY_DIR}
    ${TEE_TOP_DIR}/sdk
)

set(SAMPLEENCLAVE enclave_remote_attestation)
add_enclave_library(
    ${SAMPLEENCLAVE}
    SRCS ${E_SRCS}
    TRUSTED_LIBS ${TLIBS}
    EDL ${EDL}
    EDL_SEARCH_PATHS ${EX_EDL_SEARCH_PATHS}
    LDSCRIPT ${LDS}
)
target_include_directories(${SAMPLEENCLAVE}
    PRIVATE
    ${CMAKE_BINARY_DIR}/tproto
    ${TEE_TOP_DIR}/third_party/protobuf-cpp/src/
)
# enclave_sign(
#     ${SAMPLEENCLAVE}
#     KEY ${KEY}
#     CONFIG ${XML}
# )

set(SAMPLEAPP sample_remote_attestation)
set(SRCS
    ${TEE_PROTO_SRCS}
    ${CMAKE_CURRENT_SOURCE_DIR}/app/app.cpp
)
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
    ${CMAKE_BINARY_DIR}
    ${TEE_TOP_DIR}/sdk
    ${TEE_TOP_DIR}/sdk/include
)
add_untrusted_executable(
    ${SAMPLEAPP}
    SRCS ${SRCS}
    EDL ${EDL}
    EDL_SEARCH_PATHS ${EX_EDL_SEARCH_PATHS}
)
target_include_directories(${SAMPLEAPP} PRIVATE ${CMAKE_BINARY_DIR}/uproto)
target_link_libraries(
    ${SAMPLEAPP}
    -L${LIBRARY_OUTPUT_PATH} -L${SGX_LIBRARY_DIR} -L${SGXSSL_LIB} -L/usr/lib64
    -lprotobuf
    -Wl,--start-group -lukubetee -lchallenger -lsgx_usgxssl -lcrypto -Wl,--end-group
    -Wl,-rpath=.:/lib64:/usr/lib:/usr/local/lib
)
add_dependencies(${SAMPLEAPP} ukubetee challenger)
